<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.sitoolkit.ad.archetype</groupId>
  <artifactId>javaee7-web</artifactId>
  <version>1.1.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <!-- The Basics -->
  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>7.0</version>
      <scope>provided</scope>
    </dependency>
    <!-- このdependencyはEclipseでFaceletsのコードアシストを有効にするために必要です。 -->
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>2.2.14</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.core</groupId>
      <artifactId>deltaspike-core-api</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.core</groupId>
      <artifactId>deltaspike-core-impl</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-jpa-module-api</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-jpa-module-impl</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-test-control-module-api</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-test-control-module-impl</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <as.host>localhost</as.host>
    <as.port>8080</as.port>
    <toolsdir>${project.basedir}/tools</toolsdir>
    <hibernate-tools.basedir>${toolsdir}/hibernate-tools</hibernate-tools.basedir>
    <hibernate-tools.destdir>${project.build.directory}/generated-sources/hibernate-tools</hibernate-tools.destdir>
    <deltaspike.version>1.7.2</deltaspike.version>
    <jpa.provider>org.eclipse.persistence.jpa.PersistenceProvider</jpa.provider>
    <skipUTs>false</skipUTs>
  </properties>

  <!-- Build Settings -->
  <build>
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>META-INF/persistence.xml</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/webapp</directory>
        <targetPath>${webappDirectory}</targetPath>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-maven-plugin</artifactId>
          <version>4.0.3</version>
          <configuration>
            <url>${db.jdbc.url}</url>
            <user>${db.username}</user>
            <password>${db.password}</password>
            <locations>
              <location>${flyway.location}</location>
            </locations>
            <placeholders>
              <data>${toolsdir}/flyway/data</data>
              <comment>${db.flyway.comment}</comment>
            </placeholders>
            <driver>${db.jdbc.driver}</driver>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>${db.client.groupId}</groupId>
              <artifactId>${db.client.artifactId}</artifactId>
              <version>${db.client.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <skipTests>${skipUTs}</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.9</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${hibernate-tools.destdir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${webappDirectory}/WEB-INF/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <configLocation>${toolsdir}/checkstyle/sit_checks.xml</configLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <excludeFilterFile>${toolsdir}/findbugs/findbugs-exclude.xml</excludeFilterFile>
        </configuration>
        <version>3.0.3</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.5</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.4</version>
      </plugin>
    </plugins>
  </reporting>

  <!-- More Project Information -->
  <name>sit-ad-archetype-javaee7-web</name>
  <description>parent pom for javaee7 web application,
     useful for self study and developing new application.</description>
  <url>http://sitoolkit.org</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>yuichi.kuwahara</id>
      <name>Yuichi Kuwahara</name>
      <email>yuichi.kuwahara.0@gmail.com</email>
    </developer>
  </developers>

  <!-- Environment Settings -->
  <scm>
    <connection>scm:git:git//github.com/sitoolkit/sit-ad-archetype-javaee7.git</connection>
    <developerConnection>scm:git:git//github.com/sitoolkit/sit-ad-archetype-javaee7.git</developerConnection>
    <url>https://github.com/sitoolkit/sit-ad-archetype-javaee7.git</url>
  </scm>
  <prerequisites>
    <maven>3.1.1</maven>
  </prerequisites>
  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Snapshot Repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Maven Central Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  <profiles>
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>derby</id>
      <build>
        <defaultGoal>derby:run</defaultGoal>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.carlspring.maven</groupId>
              <artifactId>derby-maven-plugin</artifactId>
              <version>1.10</version>
              <configuration>
                <derbyHome>${toolsdir}/derby/data</derbyHome>
                <port>${db.port}</port>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.carlspring.maven</groupId>
            <artifactId>derby-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-in-initialize</id>
                <phase>initialize</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-in-post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
              <execution>
                <id>start-in-pre-site</id>
                <phase>pre-site</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-in-post-site</id>
                <phase>post-site-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mysql</id>
      <activation>
        <property>
          <name>mysql</name>
        </property>
      </activation>
      <properties>
        <mysql.antfile>${toolsdir}/mysql/build.xml</mysql.antfile>
        <mysql>install</mysql>
      </properties>
      <build>
        <defaultGoal>antrun:run</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <configuration>
              <skip>${mysql.remote}</skip>
              <target>
                <property name="db.port.local" value="${db.port}" />
                <echo message="set property : db.port.local=${db.port.local}" />
                <ant antfile="${mysql.antfile}" target="${mysql}" />
              </target>
            </configuration>
            <executions>
              <execution>
                <id>mysql-run-in-initialize</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>mysql-stop-in-post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property name="db.port.local" value="${db.port}" />
                    <echo message="set property : db.port.local=${db.port.local}" />
                    <ant antfile="${mysql.antfile}" target="stop" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>mysql-run-in-pre-site</id>
                <phase>pre-site</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>mysql-stop-in-post-site</id>
                <phase>post-site</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property name="db.port.local" value="${db.port}" />
                    <echo message="set property : db.port.local=${db.port.local}" />
                    <ant antfile="${mysql.antfile}" target="stop" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>db2-install</id>
      <activation>
        <property>
          <name>db2</name>
        </property>
      </activation>
      <properties>
        <db2.antfile>${toolsdir}/db2/build.xml</db2.antfile>
        <db2>setup</db2>
      </properties>
      <build>
        <defaultGoal>antrun:run</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <configuration>
              <target>
                <ant antfile="${db2.antfile}" target="${db2}" />
              </target>
            </configuration>
            <executions>
              <execution>
                <id>db2-run-in-initialize</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>oracle-install</id>
      <activation>
        <property>
          <name>oracle</name>
        </property>
      </activation>
      <properties>
        <oracle.antfile>${toolsdir}/oracle/build.xml</oracle.antfile>
        <oracle>setup</oracle>
      </properties>
      <build>
        <defaultGoal>antrun:run</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <configuration>
              <target>
                <ant antfile="${oracle.antfile}" target="${oracle}" />
              </target>
            </configuration>
            <executions>
              <execution>
                <id>oracle-run-in-initialize</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>db-migrate</id>
      <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>flyway-migrate-in-generate-sources</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>migrate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-tools</artifactId>
                <version>5.2.0.Final</version>
                <exclusions>
                  <exclusion>
                    <groupId>ant</groupId>
                    <artifactId>ant</artifactId>
                  </exclusion>
                </exclusions>
              </dependency>
              <dependency>
                <groupId>${db.client.groupId}</groupId>
                <artifactId>${db.client.artifactId}</artifactId>
                <version>${db.client.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>hibernate-tools-run-in-generate-sources</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- このdummyプロパティを入れずにmvn compile -P mysql,db-migrationを実行するとantのbuildがエラーとなる。 -->
                    <!-- (Hibernate Toolsがクラスパスに含まれずコンパイルエラー) -->
                    <property name="dummy" value="dummy" />
                    <property name="maven.classpath" refid="maven.plugin.classpath" />
                    <ant antfile="${hibernate-tools.basedir}/build.xml" target="hbm2java" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>embedded-glassfish</id>
      <dependencies>
        <!-- org.jboss.weld.exceptions.DeploymentException: WELD-001408が出る問題の暫定対応 -->
        <!-- <dependency> -->
        <!-- <groupId>org.jboss.weld</groupId> -->
        <!-- <version>2.2.13.Final</version> -->
        <!-- <artifactId>weld-core-impl</artifactId> -->
        <!-- </dependency> -->
      </dependencies>
      <properties>
        <maven.test.skip>true</maven.test.skip>
        <fileRealm.keyfile>${toolsdir}/embedded-glassfish/keyfile.txt</fileRealm.keyfile>
      </properties>
      <build>
        <defaultGoal>package embedded-glassfish:run</defaultGoal>
        <resources>
          <resource>
            <directory>${toolsdir}/embedded-glassfish</directory>
            <includes>
              <include>domain.xml</include>
            </includes>
            <filtering>true</filtering>
            <targetPath>${project.build.directory}</targetPath>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.glassfish.embedded</groupId>
            <artifactId>maven-embedded-glassfish-plugin</artifactId>
            <version>4.1.1</version>
            <dependencies>
              <dependency>
                <groupId>org.glassfish.main.common</groupId>
                <artifactId>simple-glassfish-api</artifactId>
                <version>4.1.1</version>
                <exclusions>
                  <exclusion>
                    <groupId>org.glassfish.main.extras</groupId>
                    <artifactId>glassfish-embedded-all</artifactId>
                  </exclusion>
                </exclusions>
              </dependency>
              <!-- embedded-glassfish-allがclasspathに含まれる問題の暫定対応 -->
              <dependency>
                <groupId>org.glassfish.main.extras</groupId>
                <artifactId>glassfish-embedded-dummy</artifactId>
                <version>0.1</version>
              </dependency>
              <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-embedded-web</artifactId>
                <version>${payara.version}</version>
              </dependency>
              <dependency>
                <groupId>${db.client.groupId}</groupId>
                <artifactId>${db.client.artifactId}</artifactId>
                <version>${db.client.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <configFile>${project.build.directory}/domain.xml</configFile>
              <systemProperties>
                <!-- <property>glassfish.embedded.tmpdir=${project.build.directory}</property> -->
              </systemProperties>
              <app>${webappDirectory}</app>
              <contextRoot>/</contextRoot>
            </configuration>
            <executions>
              <execution>
                <id>deploy</id>
                <phase>none</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                  <goal>deploy</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <!-- embedded-glassfish-allがclasspathに含まれる問題の暫定対応 -->
      <pluginRepositories>
        <pluginRepository>
          <id>dummy-repo</id>
          <name>dummy</name>
          <releases>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
          <url>file://${toolsdir}/embedded-glassfish/repository</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>

    <profile>
      <id>was-liberty</id>
      <properties>
        <maven.test.skip>true</maven.test.skip>
        <was-liberty.file.encoding>UTF-8</was-liberty.file.encoding>
      </properties>
      <build>
        <defaultGoal>package liberty:run-server</defaultGoal>
        <resources>
          <resource>
            <directory>${toolsdir}/was-liberty</directory>
            <includes>
              <include>server.xml</include>
              <include>jvm.options</include>
            </includes>
            <filtering>true</filtering>
            <targetPath>${project.build.directory}</targetPath>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>
            <version>${was-liberty.plugin.version}</version>
            <configuration>
              <assemblyArtifact>
                <groupId>com.ibm.websphere.appserver.runtime</groupId>
                <artifactId>wlp-javaee7</artifactId>
                <version>${was-liberty.version}</version>
                <type>zip</type>
              </assemblyArtifact>
              <configFile>${project.build.directory}/server.xml</configFile>
              <jvmOptionsFile>${project.build.directory}/jvm.options</jvmOptionsFile>
            </configuration>
            <executions>
              <execution>
                <id>start-server</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start-server</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-server</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop-server</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <repositories>
        <repository>
          <releases>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
          <id>ibm-maven-repo</id>
          <name>ibm-maven-repo</name>
          <url>http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/maven/repository/</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <releases>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
          <id>ibm-maven-repo</id>
          <name>ibm-maven-repo</name>
          <url>http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/maven/repository/</url>
        </pluginRepository>
        <pluginRepository>
          <id>sonatype-nexus-snapshots</id>
          <name>Sonatype Nexus Snapshots</name>
          <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>false</enabled>
          </releases>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>was-liberty-test</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.deltaspike.cdictrl</groupId>
          <artifactId>deltaspike-cdictrl-weld</artifactId>
          <version>${deltaspike.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld.se</groupId>
          <artifactId>weld-se-core</artifactId>
          <version>2.3.5.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.eclipse.persistence</groupId>
          <artifactId>eclipselink</artifactId>
          <version>2.6.4</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>wildfly</id>
      <properties>
        <maven.test.skip>true</maven.test.skip>
        <jpa.provider>org.hibernate.ejb.HibernatePersistence</jpa.provider>
      </properties>
      <build>
        <defaultGoal>resources:resources wildfly:start wildfly:execute-commands@setup wildfly:deploy</defaultGoal>
        <resources>
          <resource>
            <directory>${toolsdir}/wildfly</directory>
            <includes>
              <include>setup.cli</include>
              <include>wildfly.properties</include>
            </includes>
            <filtering>true</filtering>
            <targetPath>${project.build.directory}</targetPath>
          </resource>
        </resources>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.wildfly.plugins</groupId>
              <artifactId>wildfly-maven-plugin</artifactId>
              <version>${wildfly.plugin.version}</version>
              <configuration>
                <propertiesFile>${project.build.directory}/wildfly.properties</propertiesFile>
                <version>${wildfly.version}</version>
                <filename>${project.build.finalName}</filename>
                <name>${project.build.finalName}.war</name>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-server</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>setup</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <batch>false</batch>
                  <fail-on-error>false</fail-on-error>
                  <scripts>
                    <script>${project.build.directory}/setup.cli</script>
                  </scripts>
                  <jbossHome>${project.build.directory}/wildfly-run/wildfly-${wildfly.version}</jbossHome>
                </configuration>
              </execution>
              <execution>
                <id>deploy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-server</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>shutdown</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>wildfly-debug</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <configuration>
              <java-opts>
                <java-opt>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005</java-opt>
              </java-opts>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>wildfly-test</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.deltaspike.cdictrl</groupId>
          <artifactId>deltaspike-cdictrl-weld</artifactId>
          <version>${deltaspike.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.weld.se</groupId>
          <artifactId>weld-se-core</artifactId>
          <version>2.3.5.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>5.2.1.Final</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>it</id>
      <dependencies>
        <dependency>
          <groupId>org.sitoolkit.wt</groupId>
          <artifactId>sit-wt-runtime</artifactId>
          <version>${sitwt.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.seleniumhq.selenium</groupId>
          <artifactId>selenium-java</artifactId>
          <version>${selenium.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.appium</groupId>
          <artifactId>java-client</artifactId>
          <version>${appium.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <properties>
        <maven.test.skip>false</maven.test.skip>
        <skipUTs>true</skipUTs>
        <sitwt.test.properties>${project.build.directory}/sit-wt-test.properties</sitwt.test.properties>
      </properties>
      <build>
        <defaultGoal>verify</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.sitoolkit.wt</groupId>
            <artifactId>sit-wt-maven-plugin</artifactId>
            <version>${sitwt.version}</version>
            <executions>
              <execution>
                <id>generate-test-sources</id>
                <goals>
                  <goal>selenium2script</goal>
                  <goal>script2java</goal>
                </goals>
                <configuration>
                  <openScript>false</openScript>
                  <overwriteScript>true</overwriteScript>
                  <seleniumOutputDir>target/testscript</seleniumOutputDir>
                </configuration>
              </execution>
              <execution>
                <id>open-evidence</id>
                <goals>
                  <goal>open-evidence</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>write-project-properties</goal>
                </goals>
                <configuration>
                  <outputFile>${sitwt.test.properties}</outputFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <systemPropertyVariables>
                <baseUrl>http://${as.host}:${as.port}</baseUrl>
              </systemPropertyVariables>
              <systemPropertiesFile>${sitwt.test.properties}</systemPropertiesFile>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>it-debug</id>
      <properties>
        <forkCount>0</forkCount>
        <sitwt.debug>true</sitwt.debug>
      </properties>
    </profile>

    <profile>
      <id>it-parallel</id>
      <properties>
        <parallel>classesAndMethods</parallel>
        <threadCountClasses>1</threadCountClasses>
        <threadCountMethods>1</threadCountMethods>
      </properties>
    </profile>

    <profile>
      <id>cf</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>cf-maven-plugin</artifactId>
            <version>1.1.2</version>
            <configuration>
              <server>cloud-foundry-credentials</server>
              <services>
                <service>
                  <name>${project.artifactId}-ds</name>
                  <label>${cf.service.label}</label>
                  <plan>${cf.service.plan}</plan>
                </service>
              </services>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>