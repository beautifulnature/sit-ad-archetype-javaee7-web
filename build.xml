<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:if="ant:if"
         xmlns:unless="ant:unless"
         name="javaee7-web-distribution"
         basedir="."
         default="install">

  <!--
    javaee7-web
      target                             <= work directory to test archetype > ${workdir}
        javaee7-web-min-test-site
      javaee7-web-min
        pom.xml
        distribution
          pom.xml                        <= *1
        target
          generated-sources/archetype    <= output of archetype:create-from-project
                                            and files of new archetype > ${newarchres}
            pom.xml                      <= copy overwrite with *1
            src/main/resources
              META-INF
              archetype-resources        <= fillerd javaee7-web-min files > ${archresdir}
                pom.xml
                src
                testscript
                tools
  -->
  <property environment="env" />

  <property name="newVersion" value="1.0" />
  <input addproperty="artifactId"
         validargs="javaee7-web-min,javaee7-web-tips"
         defaultvalue="javaee7-web-min" />

  <property name="workdir" value="${basedir}/${artifactId}/target" />
  <property name="archresdir"
            value="${artifactId}/target/generated-sources/archetype/src/main/resources/archetype-resources" />
  <property name="newarchdir" value="${basedir}/${artifactId}/target/generated-sources/archetype" />

  <condition property="test.glassfish">
    <equals arg1="${artifactId}" arg2="javaee7-web-min" />
  </condition>
  <property name="test.site" value="false" />
  <property name="test.glassfish" value="false" />
  <property name="test.was-liberty" value="true" />
  <property name="test.wildfly" value="false" />

  <condition property="mvn.cmd" value="${env.MAVEN_HOME}/bin/mvn.cmd" else="/usr/local/bin/mvn">
    <os family="windows" />
  </condition>

  <property name="db.port.site" value="3307"/>
  <property name="db.port.was-liberty" value="3308"/>
  

  <target name="install">
    <property name="mvn.phase" value="install" />
    <property name="mvn.performRelease" value="false" />
    <antcall target="process-all" />
  </target>


  <target name="deploy">
    <property name="mvn.phase" value="deploy" />
    <property name="mvn.performRelease" value="true" />
    <antcall target="process-all" />
  </target>


  <target name="process-all">
    <antcall target="01_create-from-archetype" />
    <antcall target="02_modify-archetype-resource" />
    <antcall target="03_process-archetype" />
    <antcall target="04_acceptance-test" />
  </target>

  <target name="01_create-from-archetype">

    <echo message="${basedir}/${archresdir}>mvn clean archetype:create-from-project"/>
    <exec executable="${mvn.cmd}" dir="${basedir}/${artifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="clean" />
      <arg value="archetype:create-from-project" />
      <arg value="-Darchetype.filteredExtentions=java,xml,txt,groovy,cs,mdo,aj,jsp,gsp,vm,html,xhtml,properties,.classpath,.project,launch,component" />
    </exec>

  </target>


  <target name="02_modify-archetype-resource">

    <delete dir="${archresdir}/distribution" verbose="true"/>
    <delete dir="${archresdir}/tools/derby/target" verbose="true"/>
    <delete dir="${archresdir}/tools/mysql/data" verbose="true"/>
    <delete dir="${archresdir}/tools/mysql/target" verbose="true"/>
    <delete verbose="true">
      <fileset dir="${archresdir}" includes="**/.DS_Store"/>
    </delete>

    <property name="settings" value="${archresdir}/.settings" />
    <move todir="${settings}" includeemptydirs="false">
      <fileset dir="${settings}" includes="*.launch" />
      <globmapper from="${artifactId}*.launch" to="__artifactId__*.launch" />
    </move>

    <copy file="${basedir}/${artifactId}/distribution/pom.xml" todir="${newarchdir}" overwrite="true" />

  </target>


  <target name="03_process-archetype">

    <echo message="${newarchdir}>mvn version:set -DnewVewsion=${newVersion}"/>
    <exec executable="${mvn.cmd}" dir="${newarchdir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="versions:set" />
      <arg value="-DnewVersion=${newVersion}" />
      <arg value="-e"/>
    </exec>

    <condition property="mvn.phase" value="install">
      <not>
        <isset property="mvn.phase" />
      </not>
    </condition>

    <echo message="${newarchdir}>mvn clean ${mvn.phase} -DperformReleease=${mvn.performRelease}"/>
    <exec executable="${mvn.cmd}" dir="${newarchdir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="clean" />
      <arg value="${mvn.phase}" />
      <arg value="-DperformRelease=${mvn.performRelease}" />
      <arg value="-e"/>
    </exec>

  </target>


  <target name="04_acceptance-test">

    <antcall target="test-site" />
    <antcall target="test-glassfish" />
    <antcall target="test-was-liberty" />
    <antcall target="test-wildfly" />

  </target>


  <target name="archetype-generate">

    <exec executable="${mvn.cmd}" dir="${workdir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DarchetypeGroupId=org.sitoolkit.ad.archetype" />
      <arg value="-DarchetypeArtifactId=${artifactId}" />
      <arg value="-DarchetypeVersion=${newVersion}" />
      <arg value="-DgroupId=a.b.c" />
      <arg value="-DartifactId=${testArtifactId}" />
      <arg value="-Darchetype.interactive=false" />
      <arg value="-DarchetypeCatalog=local" />
      <arg value="-B" />
      <arg value="archetype:generate" />
    </exec>

  </target>


  <target name="test-site" if="${test.site}">

    <property name="testArtifactId" value="${artifactId}-test-site" />
    <antcall target="archetype-generate" />

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" resultproperty="mvn.site.exitcode">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=${db.port.site}" />
      <arg value="-Dmpir.skip=true" />
      <arg value="-Pmysql,db-migrate" />
      <arg value="site" />
      <arg value="-e"/>
    </exec>

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-Ddb.port=${db.port.site}" />
      <arg value="-Dmysql=stop" />
    </exec>

    <fail message="${workdir}/${testArtifactId}>mvn site failed!">
      <condition>
        <not>
          <equals arg1="${mvn.site.exitcode}" arg2="0"/>
        </not>
      </condition>
    </fail>
    
  </target>


  <target name="test-glassfish" if="${test.glassfish}">

    <property name="testArtifactId" value="${artifactId}-test-glassfish" />
    <antcall target="archetype-generate" />

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="verify" />
      <arg value="-Pderby,db-migrate,embedded-glassfish,it" />
      <arg value="-Devidence.open=false" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=1528" />
      <arg value="-Das.port=8091" />
      <arg value="-e"/>
    </exec>

  </target>


  <target name="test-was-liberty" if="${test.was-liberty}">

    <property name="testArtifactId" value="${artifactId}-test-was-liberty" />
    <antcall target="archetype-generate" />

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" resultproperty="mvn.verify.exitcode">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="verify" />
      <arg value="-Pmysql,db-migrate,was-liberty,it,it-parallel" />
      <arg value="-Devidence.open=false" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=${db.port.was-liberty}" />
      <arg value="-Das.port=8092" />
      <arg value="-e"/>
    </exec>

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-Ddb.port=${db.port.was-liberty}" />
      <arg value="-Dmysql=stop" />
    </exec>

    <fail message="${workdir}/${testArtifactId}>mvn verify failed!">
      <condition>
        <not>
          <equals arg1="${mvn.verify.exitcode}" arg2="0"/>
        </not>
      </condition>
    </fail>

  </target>


  <target name="test-wildfly" if="${test.wildfly}">

    <property name="testArtifactId" value="${artifactId}-test-wildfly" />
    <antcall target="archetype-generate" />

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <env key="JBOSS_HOME"
           value="${workdir}/${testArtifactId}/target/wildfly-run/wildfly-10.0.0.Final" />
      <arg value="verify" />
      <arg value="-Pderby,db-migrate,wildfly,it" />
      <arg value="-Dmaven.test.skip=false" />
      <arg value="-Devidence.open=false" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=1530" />
      <arg value="-Das.port=8093" />
      <arg value="-e"/>
    </exec>

  </target>


  <target name="set-version">

    <exec executable="${mvn.cmd}" dir="${basedir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DnewVersion=${newVersion}" />
      <arg value="clean" />
      <arg value="versions:set" />
      <arg value="install" />
    </exec>

    <exec executable="${mvn.cmd}" dir="${basedir}/javaee7-web-min" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="clean" />
      <arg value="-DallowSnapshots=true" />
      <arg value="versions:update-parent" />
    </exec>

    <exec executable="${mvn.cmd}" dir="${basedir}/javaee7-web-tips" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="clean" />
      <arg value="-DallowSnapshots=true" />
      <arg value="versions:update-parent" />
    </exec>

  </target>

</project>